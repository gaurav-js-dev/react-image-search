{"version":3,"sources":["store/reducers/errorReducer.ts","components/common/Error/Error.tsx","components/common/Loader/Loader.tsx","components/Footer/Footer.tsx","components/Header/Header.tsx","store/reducers/imagesReducer.ts","components/HomePage/components/ImageList/ImageList.tsx","components/HomePage/components/ImageSearch/ImageSearch.tsx","components/HomePage/HomePage.tsx","code/api.ts","store/reducers/loadingReducer.ts","store/sagas/imageSaga.ts","store/reducers/index.ts","store/reducers/initialState.ts","App.tsx","store/index.ts","index.tsx"],"names":["types","initialState","message","code","undefined","setError","error","type","payload","errorReducer","state","action","Error","dispatch","useDispatch","errorMessage","useSelector","s","className","data-testid","role","data-dismiss","aria-label","onClick","aria-hidden","Loader","loader","isLoading","Footer","href","rel","target","Header","window","location","reload","setPageIncrement","setImagesList","imagesList","fetchImagesSearchData","query","page","searchText","imagesReducer","map","image","url","urls","small","likes","id","height","width","ImageList","images","noImages","isEmpty","fetchImages","useCallback","useEffect","fetchSearchImages","loadNextImages","key","src","alt","ImageSearch","inputRef","useRef","useState","inputSearch","setInputSearch","handleSearch","e","preventDefault","current","blur","onSubmit","autoComplete","name","placeholder","onChange","value","required","ref","HomePage","BASE_URL","SEARCH_URL","getImages","Math","floor","random","axios","get","searchImage","search","showLoader","hideLoader","loadingReducer","dispatchError","handleFetchImagesList","handlefetchImagesSearchData","imageSaga","getPage","response","put","status","data","errors","call","select","results","takeEvery","imagesTypes","rootReducer","combineReducers","imagesState","loaderState","errorState","App","store","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea8c9b2.chunk.js","sourcesContent":["export const types = {\n  SET_ERROR: 'SET_ERROR'\n};\n\nexport type IError = {\n  message: string;\n  code: number | undefined;\n};\n\nexport const initialState: IError = {\n  message: '',\n  code: undefined\n};\n\ntype SetErrorAction = { type: string; payload: IError };\ntype SetError = (error: IError) => SetErrorAction;\n\nexport const setError: SetError = error => ({\n  type: types.SET_ERROR,\n  payload: error\n});\n\nexport const clearError = (): SetErrorAction => setError(initialState);\n\nconst errorReducer = (state: IError = initialState, action: any) => {\n  if (action.type === types.SET_ERROR) {\n    return {\n      ...state,\n      ...action.payload\n    };\n  } else return state;\n};\n\nexport default errorReducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearError } from 'src/store/reducers/errorReducer';\nimport { IReduxState } from 'src/store/reducers/initialState';\n\nconst Error = () => {\n  const dispatch = useDispatch();\n  const errorMessage = useSelector((s: IReduxState) => s.error.message);\n\n  if (!errorMessage) return null;\n  return (\n    <div className=\"Error d-flex justify-content-center mt-4\" data-testid=\"Error\">\n      <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n        <p className=\"m-0\">\n          Oops! there is an error. <br />\n          {errorMessage}\n        </p>\n        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={() => dispatch(clearError())}>\n          <span aria-hidden=\"true\" data-testid=\"close\">\n            &times;\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import './Loader.scss';\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IReduxState } from 'src/store/reducers/initialState';\n\nconst Loader = () => {\n  const isLoading = useSelector((s: IReduxState) => s.loader.isLoading);\n  if (!isLoading) return null;\n  return (\n    <div className=\"Loader d-flex flex-column justify-content-center align-items-center text-center\">\n      <div className=\"Loader__spinner spinner-border text-dark\" role=\"status\" />\n      <h1>Loading</h1>\n    </div>\n  );\n};\n\nexport default Loader;\n","import './Footer.scss';\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IReduxState } from 'src/store/reducers/initialState';\n\nconst Footer = () => {\n  const isLoading = useSelector((s: IReduxState) => s.loader.isLoading);\n  if (isLoading) return null;\n  return (\n    <footer>\n      <a href=\"https://github.com/gaurav-js-dev\" rel=\"noopener noreferrer\" target=\"_blank\">\n        Github Source\n      </a>\n      <span role=\"img\" aria-label=\"heart\">\n        {` ⚛ `}\n      </span>\n\n      <a href=\"https://gaurav-js-dev.github.io/portfolio/\" rel=\"noopener noreferrer\" target=\"_blank\">\n        Gaurav Sharma{' '}\n        <span role=\"img\" aria-label=\"heart\">\n          {` 👩‍💻  `}\n        </span>\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import './Header.scss';\n\nimport React from 'react';\n\nconst Header = () => (\n  <header onClick={() => window.location.reload()}>\n    <span role=\"img\" aria-label=\"camera\">\n      📸\n    </span>\n    React Image Search Engine\n  </header>\n);\n\nexport default Header;\n","export const types = {\n  FETCH_IMAGES_LIST: 'FETCH_IMAGES_LIST',\n  SET_IMAGES_LIST: 'SET_IMAGES_LIST',\n  SET_PAGE_INCREMENT: 'SET_PAGE_INCREMENT',\n  SET_SEARCH_TEXT: 'SET_SEARCH_TEXT',\n  FETCH_IMAGE_SEARCH_DATA: 'FETCH_USER_SEARCH_DATA',\n  CLEAR_IMAGES_LIST: 'CLEAR_IMAGES_LIST'\n};\n\nexport interface IImages {\n  url: string;\n  likes: string;\n  id: string;\n  width: string;\n  height: string;\n}\n\nexport interface IImagesState {\n  imagesList: IImages[];\n  page: number;\n  searchText: string;\n}\n\nexport type FetchImagesListAction = { type: string };\ntype FetchImagesList = () => FetchImagesListAction;\nexport const fetchImagesList: FetchImagesList = () => ({\n  type: types.FETCH_IMAGES_LIST\n});\n\nexport type SetPageIncrementAction = { type: string };\ntype SetPageIncrement = () => SetPageIncrementAction;\nexport const setPageIncrement: SetPageIncrement = () => ({\n  type: types.SET_PAGE_INCREMENT\n});\n\nexport type SetImagesListAction = { type: string; payload: IImages[] };\ntype SetImagesList = (imagesList: IImages[]) => SetImagesListAction;\nexport const setImagesList: SetImagesList = (imagesList: IImages[]) => ({\n  type: types.SET_IMAGES_LIST,\n  payload: imagesList\n});\n\nexport type FetchImagesSearchDataAction = { type: string; payload: string }; // Setting the search text to global state and passing the text to saga.\ntype FetchImagesSearchData = (query: string) => FetchImagesSearchDataAction;\nexport const fetchImagesSearchData: FetchImagesSearchData = query => ({\n  type: types.FETCH_IMAGE_SEARCH_DATA,\n  payload: query\n});\n\nexport type ClearImagesListAction = { type: string };\ntype ClearImagesList = () => ClearImagesListAction;\nexport const clearImagesList: ClearImagesList = () => ({\n  type: types.CLEAR_IMAGES_LIST\n});\n\nexport const initialState: IImagesState = {\n  imagesList: [],\n  page: 1,\n  searchText: ''\n};\n\ntype Actions = SetImagesListAction | FetchImagesSearchDataAction;\n\nconst imagesReducer = (state: IImagesState = initialState, action: Actions) => {\n  const { payload } = action;\n  switch (action.type) {\n    case types.SET_IMAGES_LIST:\n      return {\n        ...state,\n        imagesList: [\n          ...state.imagesList,\n          ...(payload as IImages[]).map((image: any) => ({\n            url: image.urls.small,\n            likes: image.likes,\n            id: image.id,\n            height: image.height,\n            width: image.width\n          }))\n        ]\n      };\n\n    case types.SET_PAGE_INCREMENT:\n      return {\n        ...state,\n        page: state.page + 1\n      };\n\n    case types.FETCH_IMAGE_SEARCH_DATA: // Setting the search text to global state and passing the text to saga.\n      return {\n        ...state,\n        searchText: payload as string\n      };\n    case types.CLEAR_IMAGES_LIST:\n      return {\n        ...state,\n        imagesList: initialState.imagesList\n      };\n    default:\n      return state;\n  }\n};\n\nexport default imagesReducer;\n","import './ImageList.scss';\n\nimport isEmpty from 'lodash/isEmpty';\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchImagesList, fetchImagesSearchData, IImages, setPageIncrement } from 'src/store/reducers/imagesReducer';\nimport { IReduxState } from 'src/store/reducers/initialState';\n\nconst ImageList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((s: IReduxState) => s.loader.isLoading);\n  const images = useSelector((s: IReduxState) => s.images.imagesList);\n  const noImages = isEmpty(images);\n\n  const searchText = useSelector((s: IReduxState) => s.images.searchText);\n\n  const fetchImages = useCallback(() => {\n    dispatch(fetchImagesList());\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [fetchImages]);\n\n  const fetchSearchImages = useCallback(() => {\n    dispatch(setPageIncrement());\n    dispatch(fetchImagesSearchData(searchText));\n  }, [searchText, dispatch]);\n\n  const loadNextImages = useCallback(() => {\n    dispatch(setPageIncrement());\n    fetchImages();\n  }, [dispatch, fetchImages]);\n\n  if (isLoading && noImages) return null;\n\n  return (\n    <div className=\"container py-4\">\n      <div className=\"row\">\n        {images.map((image: IImages) => (\n          <div className=\"col-lg-4 text-center \" key={image.id}>\n            <span className=\"stats\">{`${image.likes} 🧡`}</span>\n            <img className=\"py-1\" height={400} width={400} src={image.url} alt={image.url} />\n          </div>\n        ))}\n      </div>\n      <div className=\"text-center py-4\">\n        {noImages ? (\n          <p>No Images Found !!</p>\n        ) : (\n          <button className=\"btn btn-dark btn-md\" onClick={searchText ? fetchSearchImages : loadNextImages}>\n            Show More..\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageList;\n","import './ImageSearch.scss';\n\nimport React, { FormEvent, useCallback, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearImagesList, fetchImagesSearchData } from 'src/store/reducers/imagesReducer';\n\nconst ImageSearch = () => {\n  const dispatch = useDispatch();\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [inputSearch, setInputSearch] = useState('');\n\n  const handleSearch = useCallback(\n    (e: FormEvent, searchText: string) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      dispatch(clearImagesList());\n      dispatch(fetchImagesSearchData(searchText));\n    },\n    [dispatch]\n  );\n\n  return (\n    <div className=\"ImageSearch\">\n      <div className=\"container mt-2\">\n        <form onSubmit={e => handleSearch(e, inputSearch)}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              autoComplete=\"off\"\n              name=\"search\"\n              className=\"form-control\"\n              id=\"search\"\n              placeholder=\"Search for Images\"\n              onChange={e => setInputSearch(e.target.value)}\n              required\n              value={inputSearch}\n              ref={inputRef}\n              aria-label=\"search box\"\n            />\n            <button className=\"btn btn-dark\">\n              <span role=\"img\" aria-label=\"search button\">\n                🔍\n              </span>\n              Search\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","import React from 'react';\nimport ImageList from './components/ImageList';\nimport ImageSearch from './components/ImageSearch';\n\nconst HomePage = () => {\n  return (\n    <section className=\"HomePage\">\n      <ImageSearch />\n      <ImageList />\n    </section>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst key = '?client_id=eVds9XQ51U2XJR5eUixrQUKhKqHXiLocNllQRpWHjvQ';\n\nexport const BASE_URL = `https://api.unsplash.com/photos/${key}&per_page=6`;\nexport const SEARCH_URL = `https://api.unsplash.com/search/photos/${key}&per_page=6&query=`;\n\nconst randomNumber = () => Math.floor(Math.random() * 100);\n\nexport const getImages = () => {\n  const url = `${BASE_URL}&page=${randomNumber()}`;\n  return axios.get(url);\n};\n\nexport const searchImage = (search: string, page: number) => {\n  const url = `${SEARCH_URL}&query=${search}&page=${page}`;\n  return axios.get(url);\n};\n","export const types = {\n  SHOW_LOADER: 'SHOW_LOADER',\n  HIDE_LOADER: 'HIDE_LOADER'\n};\n\nexport interface ILoadingState {\n  isLoading: boolean;\n}\n\ntype ShowLoaderAction = { type: string };\ntype ShowLoader = () => ShowLoaderAction;\nexport const showLoader: ShowLoader = () => ({\n  type: types.SHOW_LOADER\n});\n\ntype HideLoaderAction = { type: string };\ntype HideLoader = () => HideLoaderAction;\nexport const hideLoader: HideLoader = () => ({\n  type: types.HIDE_LOADER\n});\n\ntype Actions = ShowLoaderAction | HideLoaderAction;\n\nexport const initialState = {\n  isLoading: false\n};\n\nconst loadingReducer = (state: ILoadingState = initialState, action: Actions) => {\n  switch (action.type) {\n    case types.SHOW_LOADER:\n      return {\n        ...state,\n        isLoading: true\n      };\n\n    case types.HIDE_LOADER:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","import { AxiosError } from 'axios';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\nimport { getImages, searchImage } from 'src/code/api';\nimport { IReduxState } from 'src/store/reducers/initialState';\n\nimport { setError } from '../reducers/errorReducer';\nimport { FetchImagesSearchDataAction, setImagesList, types as imagesTypes } from '../reducers/imagesReducer';\nimport { hideLoader, showLoader } from '../reducers/loadingReducer';\n\nexport const getPage = (state: IReduxState) => state.images.page;\n\nfunction* dispatchError(error: AxiosError) {\n  const { response } = error;\n  yield put(setError({ code: response?.status, message: response?.data.errors }));\n  yield put(hideLoader());\n}\n\nfunction* handleFetchImagesList() {\n  try {\n    yield put(showLoader());\n    const response = yield call(getImages);\n    yield put(setImagesList(response.data));\n    yield put(hideLoader());\n  } catch (error) {\n    yield call(dispatchError, error);\n  }\n}\n\nfunction* handlefetchImagesSearchData(action: FetchImagesSearchDataAction) {\n  try {\n    const page = yield select(getPage);\n    yield put(showLoader());\n    const response = yield call(searchImage, action.payload, page);\n    yield put(setImagesList(response.data.results));\n    yield put(hideLoader());\n  } catch (error) {\n    yield call(dispatchError, error);\n  }\n}\n\nexport default function* imageSaga() {\n  yield takeEvery(imagesTypes.FETCH_IMAGES_LIST, handleFetchImagesList);\n  yield takeEvery(imagesTypes.FETCH_IMAGE_SEARCH_DATA, handlefetchImagesSearchData);\n}\n","import { combineReducers } from 'redux';\n\nimport errorReducer from './errorReducer';\nimport imagesReducer from './imagesReducer';\nimport { IReduxState } from './initialState';\nimport loadingReducer from './loadingReducer';\n\nexport const rootReducer: any = {\n  images: imagesReducer,\n  loader: loadingReducer,\n  error: errorReducer\n};\n\nexport default combineReducers<IReduxState>(rootReducer);\n","import cloneDeep from 'lodash/cloneDeep';\n\nimport { IError, initialState as errorState } from './errorReducer';\nimport { IImagesState, initialState as imagesState } from './imagesReducer';\nimport { ILoadingState, initialState as loaderState } from './loadingReducer';\n\nexport interface IReduxState {\n  images: IImagesState;\n  loader: ILoadingState;\n  error: IError;\n}\n\nconst initialState: IReduxState = {\n  images: imagesState,\n  loader: loaderState,\n  error: errorState\n};\n\nexport const getInitialState = () => cloneDeep(initialState);\n\nexport default initialState;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Error from 'src/components/common/Error';\nimport Loader from 'src/components/common/Loader';\nimport Footer from 'src/components/Footer';\nimport Header from 'src/components/Header';\nimport HomePage from 'src/components/HomePage';\nimport configureStore from 'src/store';\n\nconst App = () => {\n  const store = configureStore();\n  return (\n    <Provider store={store}>\n      <Header />\n      <Loader />\n      <Error />\n      <HomePage />;\n      <Footer />\n    </Provider>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport imageSaga from './sagas/imageSaga';\nimport reducers from './reducers';\nimport initialState from './reducers/initialState';\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n  sagaMiddleware.run(imageSaga);\n  return store;\n}\n","import './styles/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}